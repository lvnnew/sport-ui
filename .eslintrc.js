/* eslint-disable canonical/filename-match-regex */
module.exports = {
  env: {
    browser: true,
    es2020: true,
    jest: true,
    mocha: true,
    node: true,
  },
  extends: [
    'canonical',
    'canonical/react',
    // 'canonical/mocha',
    // 'canonical/jest',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'eslint:recommended',
    'plugin:jest/recommended',
  ],
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly',
  },
  ignorePatterns: ['node_modules/', '**/generated/'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: 'module',
  },
  plugins: [
    'react',

    // '@typescript-eslint',
    // 'sort-keys-fix',
    'jest',
  ],
  rules: {
    'import/no-cycle': [2, {ignoreExternal: true}], // eslint практически всё время искал циклы во внешних библиотеках
    'import/no-deprecated': 'off', // TODO выключила это правило. В коде много deprecated-меток и я не видела что мы им следуем.
    'import/extensions': 'off', // за это отвечает тс-компилятор
    'unicorn/no-empty-file': 'off', // TODO подумать над включением
    'import/default': 'off', // судя по всему не актуально для ts
    'simple-import-sort/imports': 'off',
    'array-bracket-newline': 'off',
    'array-element-newline': 'off',
    'canonical/import-specifier-newline': 'off',
    'canonical/destructuring-property-newline': 'off',
    'unicorn/prefer-object-from-entries': 'off',
    'mocha/no-skipped-tests': 'off',
    'jest/consistent-test-it': 'off',
    'mocha/no-global-tests': 'off',
    'jest/require-top-level-describe': 'off',
    'unicorn/no-array-for-each': 'off',
    'canonical/id-match': 'off',
    'canonical/filename-match-exported': 'off',
    'canonical/filename-match-regex': 'off',
    'unicorn/no-array-reduce': 'off',
    'canonical/sort-keys': 'off',
    'import/no-extraneous-dependencies': [0],
    'sort-keys-fix/sort-keys-fix': [0],
    'no-use-before-define': 'off',
    'eslint-comments/no-unused-disable': 'off',
    'react/jsx-sort-props': 'off',
    'import/no-named-as-default': 'off',
    'canonical/sort-destructure-keys': 'off',
    'canonical/sort-react-dependencies': 'off',
    'indent': ['error', 2, {SwitchCase: 1}],
    'no-unused-vars': 'off',
    // eslint-disable-next-line max-len
    '@typescript-eslint/no-unused-vars': ['error', {argsIgnorePattern: '^_', destructuredArrayIgnorePattern: '^_', varsIgnorePattern: '^_'}],
    '@typescript-eslint/no-use-before-define': [0],
    'linebreak-style': 0,
    'class-methods-use-this': [0],
    'no-unused-vars': 'off',
    complexity: [0],
    'max-len': [
      'error',
      140,
      {
        ignorePattern: '^import|^export',
      },
    ],

    'consistent-return': [0],
    'filenames/match-exported': [0],

    // 'import/imports-first': [
    //   'warn',
    //   {
    //     'absolute-first': 'true',
    //   },
    // ],
    // 'sort-keys-fix/sort-keys-fix': [0],
    'object-curly-newline': [0],
    'unicorn/numeric-separators-style': [0],
    '@typescript-eslint/explicit-module-boundary-types': [0],
    'jest/prefer-expect-assertions': [0],

    // Enable this rules later
    'unicorn/no-reduce': [0],
    'filenames/match-regex': [0],
    'fp/no-delete': [0],
    'func-call-spacing': [0],
    'func-style': [0],
    'function-paren-newline': [0],
    'id-length': [0],
    'id-match': [0],
    'import/exports-last': [0],
    'import/max-dependencies': [0],
    'import/no-unassigned-import': [0],
    'import/no-unresolved': [0],
    'import/order': [0],
    'import/unambiguous': [0],
    'line-comment-position': [0],
    'max-nested-callbacks': [0],
    'no-extra-parens': [0],
    'no-inline-comments': [0],
    'no-nested-ternary': [0],
    'no-process-env': [0],
    'no-process-exit': [0],
    'no-shadow': [0],
    'no-spaced-func': [0],
    'no-useless-constructor': [0],
    'no-warning-comments': [0],
    'object-property-newline': [0],
    'promise/always-return': [0],
    'promise/catch-or-return': [0],
    'promise/prefer-await-to-then': [0],
    'react/forbid-component-props': [0],
    'react/jsx-boolean-value': [0],
    'react/jsx-no-bind': [0],
    'jest/no-disabled-tests': [0],
    'react/no-array-index-key': [0],
    'jest/no-truthy-falsy': [0],
    'react-hooks/rules-of-hooks': [0],
    'mocha/no-hooks-for-single-case': [0],
    'react/no-multi-comp': [0],
    '@typescript-eslint/ban-ts-ignore': [0],
    'require-await': [0],
    'unicorn/consistent-function-scoping': [0],
    '@typescript-eslint/explicit-function-return-type': [0],
    '@typescript-eslint/interface-name-prefix': [0],
    'unicorn/prevent-abbreviations': [0],
    '@typescript-eslint/no-empty-interface': [0],
    'mocha/no-setup-in-describe': [0],
    '@typescript-eslint/no-explicit-any': [0],
    'arrow-body-style': [0],
    'mocha/no-top-level-hooks': [0],
    'arrow-parens': [0],
    'fp/no-class': [0],
    'fp/no-this': [0],
    'implicit-arrow-linebreak': [0],
    'import/no-namespace': [0],
    'react/display-name': [0],
    'react/prop-types': [0],
    'space-before-function-paren': [0],
    'unicorn/expiring-todo-comments': 'off', // todo: error in module methods
    'react/prefer-read-only-props': 'off', // disabled from canonical/react
  },
  settings: {
    react: {
      version: '16.11.0',
    },
  },
};
