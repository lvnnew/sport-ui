image: node:18

# DO NOT EDIT! THIS IS GENERATED FILE

stages:
  - check
  - previous-image
  - build
  - latest-image
  - deploy
  - deploy-previous

cache:
  paths:
    - .cache
    - .cache_images
    # - node_modules

variables:
  REPO_NAME: $CI_PROJECT_NAME
  VERBOSE: 'true'
  RELEASE: $CI_COMMIT_SHORT_SHA
  KUBECONFIG: /etc/deploy/config
  PROJECT_NAME: mtbase

check:
  stage: check
  image: registry.gitlab.com/making.ventures/images/node-with-tools
  before_script:
    - yarn install --frozen-lockfile
  script:
    - ./check.sh

tag-previous-with-sha:
  extends: .tag-image
  stage: previous-image
  only:
    - master
    - release
    - /^release-.*$/
  allow_failure: true # Firt run won't be able to create previous image
  variables:
    TAG_ORIGIN: :${CI_COMMIT_REF_SLUG}
    TAG_DESTINATION: :${CI_COMMIT_REF_SLUG}-previous-for-${CI_COMMIT_SHA}

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # - /kaniko/warmer --cache-dir=$CI_PROJECT_DIR/.cache_images --image=browserless/chrome
  script:
    - /kaniko/executor
      --cache-dir=$CI_PROJECT_DIR/.cache_images
      --context ${CI_PROJECT_DIR}
      --dockerfile ${CI_PROJECT_DIR}/Dockerfile
      --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
      --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}
      --single-snapshot
  only:
    - master
    - release
    - /^release-.*$/

tag-latest:
  extends: .tag-image
  stage: latest-image
  only:
    - master
  variables:
    TAG_ORIGIN: master
    TAG_DESTINATION: latest

.tag-image:
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: ['']
  script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - crane cp ${CI_REGISTRY_IMAGE}:${TAG_ORIGIN} ${CI_REGISTRY_IMAGE}:${TAG_DESTINATION}
  variables:
    GIT_STRATEGY: none

deploy-stage:
  extends: .deploy-dev
  stage: deploy
  variables:
    ENV: "stage"
    CLUSTER_NAME: "stage01"

deploy-prod:
  extends: .deploy-prod
  stage: deploy
  variables:
    ENV: "prod"
    CLUSTER_NAME: "stage01"

deploy-stage-previous:
  extends: .deploy-dev
  stage: deploy-previous
  when: manual
  variables:
    ENV: "stage"
    CLUSTER_NAME: "stage01"
    TAG: ":${CI_COMMIT_REF_SLUG}-previous-for-${CI_COMMIT_SHA}"

deploy-prod-previous:
  extends: .deploy-prod
  stage: deploy-previous
  when: manual
  variables:
    ENV: "prod"
    CLUSTER_NAME: "stage01"
    TAG: ":${CI_COMMIT_REF_SLUG}-previous-for-${CI_COMMIT_SHA}"

.deploy-dev:
  extends:
    - .deploy
    - .deploy-ui
  stage: deploy
  variables:
    ENV: "stage"
    DEV: "true"
    HOST: "making.ventures"
    ROOT_ENABLED: "false"
    TAG: ":${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}"
    KUBE_CONFIG: ${KUBE_STAGE01_CONFIG}
    ADMIN_RECAPTCHA_PUBLIC_KEY: ${DEV_ADMIN_RECAPTCHA_PUBLIC_KEY}
    DOCKER_REGISTRY_DOMAIN: ${DEV_DOCKER_REGISTRY_DOMAIN}
    DOCKER_REGISTRY_PASSWORD: ${DEV_DOCKER_REGISTRY_PASSWORD}
    DOCKER_REGISTRY_USERNAME: ${DEV_DOCKER_REGISTRY_USERNAME}
  only:
    - master

.deploy-prod:
  extends:
    - .deploy
    - .deploy-ui
  stage: deploy
  when: manual
  variables:
    ENV: "prod"
    DEV: "false"
    HOST: "making.ventures"
    ROOT_ENABLED: "true"
    TAG: ":${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}"
    KUBE_CONFIG: ${KUBE_PROD01_CONFIG}
    ADMIN_RECAPTCHA_PUBLIC_KEY: ${DEV_ADMIN_RECAPTCHA_PUBLIC_KEY}
    DOCKER_REGISTRY_DOMAIN: ${DEV_DOCKER_REGISTRY_DOMAIN}
    DOCKER_REGISTRY_PASSWORD: ${DEV_DOCKER_REGISTRY_PASSWORD}
    DOCKER_REGISTRY_USERNAME: ${DEV_DOCKER_REGISTRY_USERNAME}
  only:
    - release
    - /^release-.*$/

.deploy-ui:
  variables:
    DEPLOY_KIND: "ui"

.deploy:
  image:
    name: alpine/helm:3.9.0
    entrypoint: [""]
  before_script:
    - mkdir -p /etc/deploy
    - echo ${KUBE_CONFIG} | base64 -d > ${KUBECONFIG}
  script:
    - NAMESPACE=${NAMESPACE:-"mtbase-${ENV}"}
    - echo NAMESPACE ${NAMESPACE}
    - echo chart ${NAMESPACE}-${DEPLOY_KIND}

    - helm upgrade
      --install
      --wait ${NAMESPACE}-${DEPLOY_KIND} chart
      --timeout 3600s
      -f chart/values_${ENV}.yaml
      --set "global.projectName=${PROJECT_NAME}"
      --set "global.clusterName=${CLUSTER_NAME}"
      --set "global.env=${ENV}"
      --set "global.deployKind=${DEPLOY_KIND}"
      --set "random=:$(date)"
      --set "app.tag=${TAG}"
      --set "ingress.host=${HOST}"
      --set "style=${STYLE}"
      --set "ingress.rootEnabled=${ROOT_ENABLED}"
      --set "admin.recaptcha.publicKey=${ADMIN_RECAPTCHA_PUBLIC_KEY}"
      --set "dockerRegistry.domain=${DOCKER_REGISTRY_DOMAIN}"
      --set "dockerRegistry.password=${DOCKER_REGISTRY_PASSWORD}"
      --set "dockerRegistry.username=${DOCKER_REGISTRY_USERNAME}"
      --namespace ${NAMESPACE}
