import React, {
  FC,
  useEffect,
} from 'react';
import {
  useVersion,
} from 'react-admin';
import {
  gql,
  useQuery,
} from '@apollo/client';
import {
  makeStyles,
} from '@material-ui/core/styles';

const useStyles = makeStyles(() => ({
  section: {
    margin: '10px auto',
  },
  catalog: {
    margin: '20px 10px',
  },
  field: {
    margin: '20px 10px',
  },
}));

const META_REQUEST = gql`
  query {
    Meta
  }
`;

const MetaPage: FC = () => {
  const classes = useStyles();
  const {data: result, refetch} = useQuery(META_REQUEST);
  const version = useVersion();

  useEffect(() => {
    refetch();
  }, [refetch, version]);

  return (
    <>
      {result && <div>
        <div className={classes.section}>
          name: {result.Meta.name}
        </div>
        <div className={classes.section}>
          prefix: {result.Meta.prefix}
        </div>
        <div className={classes.section}>
          needFor: {result.Meta.needFor}
        </div>
        <div className={classes.section}>
          deployEnvironments: {result.Meta.deployEnvironments.join(',')}
        </div>
        <div className={classes.section}>
          configVars: {result.Meta.configVars.join(',')}
        </div>
        <div className={classes.section}>
          Catalogs:
        </div>
        <div className={classes.section}>
          {result.Meta.catalogs.map(
            (catalog: any, index: number) => <Catalog catalog={catalog} key={index} />,
          )}
        </div>
      </div>}
    </>
  );
};

const Catalog: FC<{catalog: any}> = ({catalog}) => {
  const classes = useStyles();

  return (
    <>
      {<div className={classes.catalog}>
        <div className={classes.section}>
          name: {catalog.name}
        </div>
        <div className={classes.section}>
          needFor: {catalog.needFor}
        </div>
        <div className={classes.section}>
          Fields:
        </div>
        <div className={classes.section}>
          {catalog.fields.map(
            (field: any, index: number) => <Field field={field} key={index} />,
          )}
        </div>
      </div>}
    </>
  );
};

const Field: FC<{field: any}> = ({field}) => {
  const classes = useStyles();

  return (
    <>
      {<div className={classes.field}>
        <div className={classes.section}>
          name: {field.name}
        </div>
        <div className={classes.section}>
          type: {field.type}
        </div>
        <div className={classes.section}>
          required: {field.required?.toString()}
        </div>
        <div className={classes.section}>
          needFor: {field.needFor}
        </div>
        <div className={classes.section}>
          requiredOnInput: {field.requiredOnInput?.toString()}
        </div>
        <div className={classes.section}>
          updatable: {field.updatable?.toString()}
        </div>
        <div className={classes.section}>
          autoGenerated: {field.autoGenerated?.toString()}
        </div>
        <div className={classes.section}>
          category: {field.category}
        </div>
        <div className={classes.section}>
          constantOnCreate: {field.constantOnCreate?.toString()}
        </div>
        <div className={classes.section}>
          constantOnUpdate: {field.constantOnUpdate?.toString()}
        </div>
      </div>}
    </>
  );
};

export default MetaPage;
